{"version":3,"sources":["../../src/lib/import-as.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEzC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;EACxE,MAAM,CAAC;AACT;;AAEA,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;AAEhE,KAAK,CAAC,QAAQ,CAAC;AACf;EACE,EAAE;EACF,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/D,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;MACd,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC9B,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;IAC/B,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO;IACrD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG;IAC7C,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACjC,GAAG,CAAC;IACJ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC,CAAC,IAAI,CAAC;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC;IACA,MAAM,CAAC;EACT,CAAC;AACH;;AAEA,MAAM,CAAC,OAAO,CAAC","file":"lib/import-as.js","sourcesContent":["import { replaceRequire, fromRe } from '.'\n\nconst makeDefaultIf = (name) => {\n  const i = `if (${name} && ${name}.__esModule) ${name} = ${name}.default;`\n  return i\n}\n\nconst importRe = /( *import\\s+(?:(.+?)\\s*,\\s*)?\\*\\s+as\\s+(.+?))/\nconst re = new RegExp(`${importRe.source}${fromRe.source}`, 'gm')\n\nconst importAs =\n{\n  re,\n  replacement(match, importSeg, defName, varName, fromSeg, sd, ld) {\n    const realSrc = ld\n      ? this.markers.literals.map[ld]\n      : this.markers.strings.map[sd]\n    const [, quotes, src] = /([\"'`])(.+?)\\1/.exec(realSrc)\n    const r = replaceRequire(fromSeg, quotes, src)\n    const { length } = importSeg.split('\\n')\n    const ws = '\\n'.repeat(length - 1)\n    let c\n    if (defName) {\n      c = `${ws}let ${varName} = ${defName}${r} ${makeDefaultIf(defName)}`\n    } else {\n      c = `${ws}const ${varName}${r}`\n    }\n    return c\n  },\n}\n\nexport default importAs\n"]}